#!/bin/bash

set -eo pipefail

: ${GPF_USE_SSH:=""}

TEMP_MODE=false
UPSTREAM_REPO=""
BRANCH_SPEC=""

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --temp)
            TEMP_MODE=true
            shift
            ;;
        *)
            if [ -z "$UPSTREAM_REPO" ]; then
                UPSTREAM_REPO=$1
            elif [ -z "$BRANCH_SPEC" ]; then
                BRANCH_SPEC=$1
            else
                echo "Error: Too many arguments"
                exit 1
            fi
            shift
            ;;
    esac
done

NUM_COLONS=$(echo "$BRANCH_SPEC" | awk -F: '{print NF-1}')

if [ -z "$UPSTREAM_REPO" ] || [ -z "$BRANCH_SPEC" ] || [ "$NUM_COLONS" -ne 1 ]; then
    echo "Usage: $0 [--temp] <upstream_repository> <fork_username>:<fork_branchname>"
    echo
    echo "Options:"
    echo "  --temp  Temporarily add the remote for the operation and remove it afterwards"
    echo
    echo "Arguments:"
    echo "  <upstream_repository>  The repository to push the branch to"
    echo "  <fork_username>        The GitHub username of the fork owner"
    echo "  <fork_branchname>      The name of the branch in the fork to push"
    exit 1
fi

SOURCE_GH_USER=$(echo "$BRANCH_SPEC" | awk -F: '{print $1}')
SOURCE_BRANCH=$(echo "$BRANCH_SPEC" | awk -F: '{print $2}')
REPO_NAME=$(git remote get-url --push origin | awk -F/ '{print $NF}' | sed 's/\.git$//')

# Generate the GPF_UPSTREAM_BRANCH name based on BRANCH_SPEC
GPF_UPSTREAM_BRANCH="integration/${SOURCE_GH_USER}/${SOURCE_BRANCH}"

# Set the remote name based on SOURCE_GH_USER
REMOTE_NAME="fork-${SOURCE_GH_USER}"

# Remove existing remote if it exists
git remote remove "$REMOTE_NAME" 2>/dev/null || true

if [ -n "$GPF_USE_SSH" ]; then
    git remote add "$REMOTE_NAME" "git@github.com:$SOURCE_GH_USER/$REPO_NAME.git"
else
    git remote add "$REMOTE_NAME" "https://github.com/$SOURCE_GH_USER/$REPO_NAME.git"
fi


git fetch "$REMOTE_NAME" "$SOURCE_BRANCH"
git push --force $UPSTREAM_REPO "refs/remotes/$REMOTE_NAME/$SOURCE_BRANCH:refs/heads/$GPF_UPSTREAM_BRANCH"

if [ "$TEMP_MODE" = true ]; then
    git remote remove "$REMOTE_NAME"
    echo "Removed temporary remote $REMOTE_NAME"
else
    echo "Kept remote $REMOTE_NAME for future use"
fi

cat <<EOF
Forked branch '$BRANCH_SPEC' has been pushed to $UPSTREAM_REPO branch '$GPF_UPSTREAM_BRANCH'
EOF
